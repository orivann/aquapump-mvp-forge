services:
  frontend:
    build:
      context: .
      dockerfile: infra/frontend.Dockerfile
      target: dev
      args:
        UID: 1001
        GID: 1001
    ports:
      - "${FRONTEND_DEV_PORT:-8081}:8080"
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - vite-cache:/app/node_modules/.vite
    depends_on:
      - backend
    networks:
      - aquapump-net

  frontend-prod:
    build:
      context: .
      dockerfile: infra/frontend.Dockerfile
      target: prod
    ports:
      - "${FRONTEND_PROD_PORT:-8080}:8080"
    restart: unless-stopped
    networks:
      - aquapump-net

  backend:
    build:
      context: .
      dockerfile: infra/backend.Dockerfile
      target: dev
    ports:
      - "3001:3001"
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - aquapump-net

  postgres:
    container_name: postgres
    image: "public.ecr.aws/bitnami/postgresql:14-debian-11"
    ports:
      - "5432:5432"
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - aquapump-net

networks:
  aquapump-net:
    driver: bridge

volumes:
  vite-cache:
  postgres-data:
